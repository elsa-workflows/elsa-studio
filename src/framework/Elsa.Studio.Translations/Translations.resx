<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="14 days" xml:space="preserve">
    <value>14 days</value>
  </data>
    <data name="180 days" xml:space="preserve">
    <value>180 days</value>
  </data>
    <data name="30 days" xml:space="preserve">
    <value>30 days</value>
  </data>
    <data name="7 days" xml:space="preserve">
    <value>7 days</value>
  </data>
    <data name="90 days" xml:space="preserve">
    <value>90 days</value>
  </data>
    <data name="A brief description of the agent." xml:space="preserve">
    <value>A brief description of the agent.</value>
  </data>
    <data name="A brief description of the secret." xml:space="preserve">
    <value>A brief description of the secret.</value>
  </data>
    <data name="A brief description of the workflow." xml:space="preserve">
    <value>A brief description of the workflow.</value>
  </data>
    <data name="A brief description of this input." xml:space="preserve">
    <value>A brief description of this input.</value>
  </data>
    <data name="A brief description of this output." xml:space="preserve">
    <value>A brief description of this output.</value>
  </data>
    <data name="A custom activity category to assign this workflow-as-an-activity to." xml:space="preserve">
    <value>A custom activity category to assign this workflow-as-an-activity to.</value>
  </data>
    <data name="A custom category by which to group this input." xml:space="preserve">
    <value>A custom category by which to group this input.</value>
  </data>
    <data name="A custom category by which to group this output." xml:space="preserve">
    <value>A custom category by which to group this output.</value>
  </data>
    <data name="A default value." xml:space="preserve">
    <value>A default value.</value>
  </data>
    <data name="A description about the role and purpose of this agent." xml:space="preserve">
    <value>A description about the role and purpose of this agent.</value>
  </data>
    <data name="A description about the role and purpose of this input variable." xml:space="preserve">
    <value>A description about the role and purpose of this input variable.</value>
  </data>
    <data name="A description about the secret." xml:space="preserve">
    <value>A description about the secret.</value>
  </data>
    <data name="A description of this activity to be displayed in the designer." xml:space="preserve">
    <value>A description of this activity to be displayed in the designer.</value>
  </data>
    <data name="A technical name for the function" xml:space="preserve">
    <value>A technical name for the function that this agent perform. For example: WriteCode</value>
  </data>
    <data name="Acknowledge Datasource Event" xml:space="preserve">
    <value>Acknowledge Datasource Event</value>
  </data>
    <data name="Activation strategy" xml:space="preserve">
    <value>Activation strategy</value>
  </data>
    <data name="Activities" xml:space="preserve">
    <value>Activities</value>
  </data>
    <data name="Activity" xml:space="preserve">
    <value>Activity</value>
  </data>
    <data name="Activity Instance ID" xml:space="preserve">
    <value>Activity Instance ID</value>
  </data>
    <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
    <data name="Add input" xml:space="preserve">
    <value>Add input</value>
  </data>
    <data name="Add output" xml:space="preserve">
    <value>Add output</value>
  </data>
    <data name="Add variable" xml:space="preserve">
    <value>Add variable</value>
  </data>
    <data name="Agent" xml:space="preserve">
    <value>Agent</value>
  </data>
    <data name="Agents" xml:space="preserve">
    <value>Agents</value>
  </data>
    <data name="Aggregation" xml:space="preserve">
    <value>Aggregation</value>
  </data>
    <data name="Allow this workflow to be used as an activity." xml:space="preserve">
    <value>Allow this workflow to be used as an activity.</value>
  </data>
    <data name="API Key" xml:space="preserve">
    <value>API Key</value>
  </data>
    <data name="API Keys" xml:space="preserve">
    <value>API Keys</value>
  </data>
    <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
    <data name="Auto-update consuming workflows" xml:space="preserve">
    <value>Auto-update consuming workflows</value>
  </data>
    <data name="Auto-save" xml:space="preserve">
    <value>Auto-save</value>
  </data>
    <data name="Branching" xml:space="preserve">
    <value>Branching</value>
  </data>
    <data name="Break" xml:space="preserve">
    <value>Break</value>
  </data>
    <data name="Bulk actions" xml:space="preserve">
    <value>Bulk actions</value>
  </data>
    <data name="Bulk Dispatch Workflows" xml:space="preserve">
    <value>Bulk Dispatch Workflows</value>
  </data>
    <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
    <data name="Check this option if the variable holds an array of the selected type." xml:space="preserve">
    <value>Check this option if the variable holds an array of the selected type.</value>
  </data>
    <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
    <data name="Click to open a new workflow tab" xml:space="preserve">
    <value>Click to open a new workflow tab</value>
  </data>
    <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
    <data name="Close workflow" xml:space="preserve">
    <value>Close workflow</value>
  </data>
    <data name="Common" xml:space="preserve">
    <value>Common</value>
  </data>
    <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
    <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
    <data name="Composition" xml:space="preserve">
    <value>Composition</value>
  </data>
    <data name="Connection Strings" xml:space="preserve">
    <value>Connection Strings</value>
  </data>
    <data name="Console" xml:space="preserve">
    <value>Console</value>
  </data>
    <data name="Container" xml:space="preserve">
    <value>Container</value>
  </data>
    <data name="Correlate" xml:space="preserve">
    <value>Correlate</value>
  </data>
    <data name="Correlation ID" xml:space="preserve">
    <value>Correlation ID</value>
  </data>
    <data name="Create Agent" xml:space="preserve">
    <value>Create Agent</value>
  </data>
    <data name="Create API Key" xml:space="preserve">
    <value>Create API Key</value>
  </data>
    <data name="Create Secret" xml:space="preserve">
    <value>Create Secret</value>
  </data>
    <data name="Create Service" xml:space="preserve">
    <value>Create Service</value>
  </data>
    <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
    <data name="CreatedAt" xml:space="preserve">
    <value>CreatedAt</value>
  </data>
    <data name="Create workflow" xml:space="preserve">
    <value>Create workflow</value>
  </data>
    <data name="Cron" xml:space="preserve">
    <value>Cron</value>
  </data>
    <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
    <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
    <data name="Date Filters" xml:space="preserve">
    <value>Date Filters</value>
  </data>
    <data name="Decision" xml:space="preserve">
    <value>Decision</value>
  </data>
    <data name="Default configuration" xml:space="preserve">
    <value>Default configuration</value>
  </data>
    <data name="Default value" xml:space="preserve">
    <value>Default value</value>
  </data>
    <data name="Definition ID" xml:space="preserve">
    <value>Definition ID</value>
  </data>
    <data name="Definition version" xml:space="preserve">
    <value>Definition version</value>
  </data>
    <data name="Definition version ID" xml:space="preserve">
    <value>Definition version ID</value>
  </data>
    <data name="Definitions" xml:space="preserve">
    <value>Definitions</value>
  </data>
    <data name="Delay" xml:space="preserve">
    <value>Delay</value>
  </data>
    <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
    <data name="Dispatch Workflow" xml:space="preserve">
    <value>Dispatch Workflow</value>
  </data>
    <data name="Display name" xml:space="preserve">
    <value>Display name</value>
  </data>
    <data name="Display text" xml:space="preserve">
    <value>Display text</value>
  </data>
    <data name="Download File" xml:space="preserve">
    <value>Download File</value>
  </data>
    <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
    <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
    <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
    <data name="Enter a list of possible outcomes for this workflow." xml:space="preserve">
    <value>Enter a list of possible outcomes for this workflow.</value>
  </data>
    <data name="Event" xml:space="preserve">
    <value>Event</value>
  </data>
    <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
    <data name="Excel Parser" xml:space="preserve">
    <value>Excel Parser</value>
  </data>
    <data name="Execution Settings" xml:space="preserve">
    <value>Execution Settings</value>
  </data>
    <data name="Executions" xml:space="preserve">
    <value>Executions</value>
  </data>
    <data name="Expires" xml:space="preserve">
    <value>Expires</value>
  </data>
    <data name="Expires In" xml:space="preserve">
    <value>Expires In</value>
  </data>
    <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
    <data name="Export the current workflow as a JSON file" xml:space="preserve">
    <value>Export the current workflow as a JSON file.</value>
  </data>
    <data name="Export this version as a JSON file." xml:space="preserve">
    <value>Export this version as a JSON file.</value>
  </data>
    <data name="Fault" xml:space="preserve">
    <value>Fault</value>
  </data>
    <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
    <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
    <data name="FinishedAt" xml:space="preserve">
    <value>FinishedAt</value>
  </data>
    <data name="Flow" xml:space="preserve">
    <value>Flow</value>
  </data>
    <data name="For" xml:space="preserve">
    <value>For</value>
  </data>
    <data name="Fork (flow)" xml:space="preserve">
    <value>Fork (flow)</value>
  </data>
    <data name="Frequency Penalty" xml:space="preserve">
    <value>Frequency Penalty</value>
  </data>
    <data name="Function" xml:space="preserve">
    <value>Function</value>
  </data>
    <data name="Function Name" xml:space="preserve">
    <value>Function Name</value>
  </data>
    <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
    <data name="Has Incidents" xml:space="preserve">
    <value>Has Incidents</value>
  </data>
    <data name="HTTP" xml:space="preserve">
    <value>HTTP</value>
  </data>
    <data name="HTTP Endpoint" xml:space="preserve">
    <value>HTTP Endpoint</value>
  </data>
    <data name="HTTP File Response" xml:space="preserve">
    <value>HTTP File Response</value>
  </data>
    <data name="HTTP Request" xml:space="preserve">
    <value>HTTP Request</value>
  </data>
    <data name="HTTP Request (flow)" xml:space="preserve">
    <value>HTTP Request (flow)</value>
  </data>
    <data name="HTTP Response" xml:space="preserve">
    <value>HTTP Response</value>
  </data>
    <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
    <data name="The ID of the activity." xml:space="preserve">
    <value>The ID of the activity.</value>
  </data>
    <data name="If" xml:space="preserve">
    <value>If</value>
  </data>
    <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
    <data name="Import a JSON file containing workflow data to override the current workflow's contents." xml:space="preserve">
    <value>Import a JSON file containing workflow data to override the current workflow's contents.</value>
  </data>
    <data name="Incident Strategy" xml:space="preserve">
    <value>Incident Strategy</value>
  </data>
    <data name="IncidentCount" xml:space="preserve">
    <value>IncidentCount</value>
  </data>
    <data name="Incidents" xml:space="preserve">
    <value>Incidents</value>
  </data>
    <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
    <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
    <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
    <data name="Input Properties" xml:space="preserve">
    <value>Input Properties</value>
  </data>
    <data name="Input/output" xml:space="preserve">
    <value>Input/output</value>
  </data>
    <data name="Inputs" xml:space="preserve">
    <value>Inputs</value>
  </data>
    <data name="Instances" xml:space="preserve">
    <value>Instances</value>
  </data>
    <data name="int" xml:space="preserve">
    <value>int</value>
  </data>
    <data name="Is" xml:space="preserve">
    <value>Is</value>
  </data>
    <data name="Is After" xml:space="preserve">
    <value>Is After</value>
  </data>
    <data name="Is array" xml:space="preserve">
    <value>Is array</value>
  </data>
    <data name="Is Before" xml:space="preserve">
    <value>Is Before</value>
  </data>
    <data name="Is Not" xml:space="preserve">
    <value>Is Not</value>
  </data>
    <data name="Is on or After" xml:space="preserve">
    <value>Is on or After</value>
  </data>
    <data name="Is on or Before" xml:space="preserve">
    <value>Is on or Before</value>
  </data>
    <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
    <data name="Journal" xml:space="preserve">
    <value>Journal</value>
  </data>
    <data name="Latest version" xml:space="preserve">
    <value>Latest version</value>
  </data>
    <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
    <data name="Log Persistence Strategy" xml:space="preserve">
    <value>Log Persistence Strategy</value>
  </data>
    <data name="Looping" xml:space="preserve">
    <value>Looping</value>
  </data>
    <data name="Manage all the things" xml:space="preserve">
    <value>Manage all the things</value>
  </data>
    <data name="Max Tokens" xml:space="preserve">
    <value>Max Tokens</value>
  </data>
    <data name="Metadata" xml:space="preserve">
    <value>Metadata</value>
  </data>
    <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="The name of the activity. Named activities can be referenced by other activities." xml:space="preserve">
    <value>The name of the activity. Named activities can be referenced by other activities.</value>
  </data>
    <data name="Never" xml:space="preserve">
    <value>Never</value>
  </data>
    <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
    <data name="No agents found" xml:space="preserve">
    <value>No agents found</value>
  </data>
    <data name="No API keys found" xml:space="preserve">
    <value>No API keys found</value>
  </data>
    <data name="No inputs" xml:space="preserve">
    <value>No inputs</value>
  </data>
    <data name="No outcomes associated with this execution." xml:space="preserve">
    <value>No outcomes associated with this execution.</value>
  </data>
    <data name="No output associated with this execution." xml:space="preserve">
    <value>No output associated with this execution.</value>
  </data>
    <data name="No outputs" xml:space="preserve">
    <value>No outputs</value>
  </data>
    <data name="No secrets found" xml:space="preserve">
    <value>No secrets found</value>
  </data>
    <data name="No services found" xml:space="preserve">
    <value>No services found</value>
  </data>
    <data name="No state associated with this execution." xml:space="preserve">
    <value>No state associated with this execution.</value>
  </data>
    <data name="No variables" xml:space="preserve">
    <value>No variables</value>
  </data>
    <data name="No workflow definitions found" xml:space="preserve">
    <value>No workflow definitions found</value>
  </data>
    <data name="No workflow instances found" xml:space="preserve">
    <value>No workflow instances found</value>
  </data>
    <data name="object" xml:space="preserve">
    <value>object</value>
  </data>
    <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
    <data name="Open File" xml:space="preserve">
    <value>Open File</value>
  </data>
    <data name="OpenAIChatCompletion" xml:space="preserve">
    <value>OpenAIChatCompletion</value>
  </data>
    <data name="OpenAITextToImage" xml:space="preserve">
    <value>OpenAITextToImage</value>
  </data>
    <data name="Outcomes" xml:space="preserve">
    <value>Outcomes</value>
  </data>
    <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
    <data name="Output Properties" xml:space="preserve">
    <value>Output Properties</value>
  </data>
    <data name="Outputs" xml:space="preserve">
    <value>Outputs</value>
  </data>
    <data name="Parser" xml:space="preserve">
    <value>Parser</value>
  </data>
    <data name="Log Persistence" xml:space="preserve">
    <value>Log Persistence</value>
  </data>
    <data name="Plugins" xml:space="preserve">
    <value>Plugins</value>
  </data>
    <data name="Presence Penalty" xml:space="preserve">
    <value>Presence Penalty</value>
  </data>
    <data name="Primitives" xml:space="preserve">
    <value>Primitives</value>
  </data>
    <data name="Prompt Template" xml:space="preserve">
    <value>Prompt Template</value>
  </data>
    <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
    <data name="Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
    <data name="Publish Event" xml:space="preserve">
    <value>Publish Event</value>
  </data>
    <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
    <data name="Published version" xml:space="preserve">
    <value>Published version</value>
  </data>
    <data name="Publish the current workflow" xml:space="preserve">
    <value>Publish the current workflow</value>
  </data>
    <data name="Read Data from Configuration / Runtime" xml:space="preserve">
    <value>Read Data from Configuration / Runtime</value>
  </data>
    <data name="Read Data from Database" xml:space="preserve">
    <value>Read Data from Database</value>
  </data>
    <data name="Rollback to this version" xml:space="preserve">
    <value>Rollback to this version</value>
  </data>
    <data name="Rows Per Page" xml:space="preserve">
    <value>Rows Per Page</value>
  </data>
    <data name="Run" xml:space="preserve">
    <value>Run</value>
  </data>
    <data name="Run Asynchronously" xml:space="preserve">
    <value>Run Asynchronously</value>
  </data>
    <data name="Run JavaScript" xml:space="preserve">
    <value>Run JavaScript</value>
  </data>
    <data name="Run Python" xml:space="preserve">
    <value>Run Python</value>
  </data>
    <data name="Run Task" xml:space="preserve">
    <value>Run Task</value>
  </data>
    <data name="Run workflow" xml:space="preserve">
    <value>Run workflow</value>
  </data>
    <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
    <data name="Save File" xml:space="preserve">
    <value>Save File</value>
  </data>
    <data name="Scheduling" xml:space="preserve">
    <value>Scheduling</value>
  </data>
    <data name="Scope" xml:space="preserve">
    <value>Scope</value>
  </data>
    <data name="Scripting" xml:space="preserve">
    <value>Scripting</value>
  </data>
    <data name="Search" xml:space="preserve">
    <value>Search...</value>
  </data>
    <data name="Search on name, id, definition id, definition version id, correlation id" xml:space="preserve">
    <value>Search on name, id, definition id, definition version id, correlation id</value>
  </data>
    <data name="Search on name, description, id, definition id" xml:space="preserve">
    <value>Search on name, description, id, definition id</value>
  </data>
    <data name="Secret" xml:space="preserve">
    <value>Secret</value>
  </data>
    <data name="Secrets" xml:space="preserve">
    <value>Secrets</value>
  </data>
    <data name="Send Email" xml:space="preserve">
    <value>Send Email</value>
  </data>
    <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
    <data name="Set Name" xml:space="preserve">
    <value>Set Name</value>
  </data>
    <data name="Set Output" xml:space="preserve">
    <value>Set Output</value>
  </data>
    <data name="Set Variable" xml:space="preserve">
    <value>Set Variable</value>
  </data>
    <data name="Set Workflow Context Parameter" xml:space="preserve">
    <value>Set Workflow Context Parameter</value>
  </data>
    <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
    <data name="Show accumulated time" xml:space="preserve">
    <value>Show accumulated time</value>
  </data>
    <data name="Show events scoped to current container" xml:space="preserve">
    <value>Show events scoped to current container</value>
  </data>
    <data name="Show incidents" xml:space="preserve">
    <value>Show incidents</value>
  </data>
    <data name="Show relative time" xml:space="preserve">
    <value>Show relative time</value>
  </data>
    <data name="Showing all events" xml:space="preserve">
    <value>Showing all events</value>
  </data>
    <data name="Showing incidents" xml:space="preserve">
    <value>Showing incidents</value>
  </data>
    <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
    <data name="Start at" xml:space="preserve">
    <value>Start at</value>
  </data>
    <data name="Start of workflow" xml:space="preserve">
    <value>Start of workflow</value>
  </data>
    <data name="Started" xml:space="preserve">
    <value>Started</value>
  </data>
    <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
    <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
    <data name="Storage" xml:space="preserve">
    <value>Storage</value>
  </data>
    <data name="string" xml:space="preserve">
    <value>string</value>
  </data>
    <data name="Sub status" xml:space="preserve">
    <value>Sub status</value>
  </data>
    <data name="Sub-Workflow" xml:space="preserve">
    <value>Sub-Workflow</value>
  </data>
    <data name="Sub-Workflow Inputs" xml:space="preserve">
    <value>Sub-Workflow Inputs</value>
  </data>
    <data name="Sub-Workflow Outputs" xml:space="preserve">
    <value>Sub-Workflow Outputs</value>
  </data>
    <data name="SubStatus" xml:space="preserve">
    <value>SubStatus</value>
  </data>
    <data name="Switch" xml:space="preserve">
    <value>Switch</value>
  </data>
    <data name="Switch (flow)" xml:space="preserve">
    <value>Switch (flow)</value>
  </data>
    <data name="Task" xml:space="preserve">
    <value>Task</value>
  </data>
    <data name="Temperature" xml:space="preserve">
    <value>Temperature</value>
  </data>
    <data name="The .NET type of the input variable." xml:space="preserve">
    <value>The .NET type of the input variable.</value>
  </data>
    <data name="The .NET type of the output variable." xml:space="preserve">
    <value>The .NET type of the output variable.</value>
  </data>
    <data name="The description of the output variable." xml:space="preserve">
    <value>The description of the output variable.</value>
  </data>
    <data name="The lifetime of this secret" xml:space="preserve">
    <value>The lifetime of this secret</value>
  </data>
    <data name="The maximum number" xml:space="preserve">
    <value>The maximum number of tokens to generate. Leave empty for maximum.</value>
  </data>
    <data name="The name of the agent." xml:space="preserve">
    <value>The name of the agent.</value>
  </data>
    <data name="The name of the function that the agent will execute." xml:space="preserve">
    <value>The name of the function that the agent will execute.</value>
  </data>
    <data name="The name of the new agent." xml:space="preserve">
    <value>The name of the new agent.</value>
  </data>
    <data name="The name of the new secret." xml:space="preserve">
    <value>The name of the new secret.</value>
  </data>
    <data name="The name of the new workflow." xml:space="preserve">
    <value>The name of the new workflow.</value>
  </data>
    <data name="The name of the variable." xml:space="preserve">
    <value>The name of the variable.</value>
  </data>
    <data name="The penalty for repeating" xml:space="preserve">
    <value>The penalty for repeating any one token. A higher presence penalty will reduce the likelihood of token repetition, fostering more varied text generation.</value>
  </data>
    <data name="The penalty for repeating any one token" xml:space="preserve">
    <value>The penalty for repeating any one token. A higher frequency penalty will reduce the likelihood of token repetition, fostering more varied text generation.</value>
  </data>
    <data name="The plugins that the agent can use." xml:space="preserve">
    <value>The plugins that the agent can use.</value>
  </data>
    <data name="The scope of the secret helps the UI to filter available options from dropdown lists." xml:space="preserve">
    <value>The scope of the secret helps the UI to filter available options from dropdown lists.</value>
  </data>
    <data name="The secret value." xml:space="preserve">
    <value>The secret value.</value>
  </data>
    <data name="The services that the agent requires." xml:space="preserve">
    <value>The services that the agent requires.</value>
  </data>
    <data name="The settings of the service in JSON format." xml:space="preserve">
    <value>The settings of the service in JSON format.</value>
  </data>
    <data name="The system prompt template that the agent will use." xml:space="preserve">
    <value>The system prompt template that the agent will use.</value>
  </data>
    <data name="The technical name of the API key." xml:space="preserve">
    <value>The technical name of the API key.</value>
  </data>
    <data name="The technical name of the input variable" xml:space="preserve">
    <value>The technical name of the input variable. When referencing this variable in the prompt template, use this name.</value>
  </data>
    <data name="The technical name of the input." xml:space="preserve">
    <value>The technical name of the input.</value>
  </data>
    <data name="The technical name of the service." xml:space="preserve">
    <value>The technical name of the service.</value>
  </data>
    <data name="The temperature of the model" xml:space="preserve">
    <value>The temperature of the model. Higher values mean the model will take more risks. Try 0.1 for results that are very close to what the model was trained on. Try 0.9 for very creative results.</value>
  </data>
    <data name="The type of the service." xml:space="preserve">
    <value>The type of the service.</value>
  </data>
    <data name="The user-friendly name of this input." xml:space="preserve">
    <value>The user-friendly name of this input.</value>
  </data>
    <data name="The user-friendly name of this output." xml:space="preserve">
    <value>The user-friendly name of this output.</value>
  </data>
    <data name="The value of the API key." xml:space="preserve">
    <value>The value of the API key.</value>
  </data>
    <data name="There are currently no inputs defined." xml:space="preserve">
    <value>There are currently no inputs defined.</value>
  </data>
    <data name="There are currently no outputs defined." xml:space="preserve">
    <value>There are currently no outputs defined.</value>
  </data>
    <data name="There are currently no variables defined." xml:space="preserve">
    <value>There are currently no variables defined.</value>
  </data>
    <data name="This activity does not have any common properties." xml:space="preserve">
    <value>This activity does not have any common properties.</value>
  </data>
    <data name="This activity does not have any input properties." xml:space="preserve">
    <value>This activity does not have any input properties.</value>
  </data>
    <data name="This activity does not have any output properties." xml:space="preserve">
    <value>This activity does not have any output properties.</value>
  </data>
    <data name="This input is an array" xml:space="preserve">
    <value>This input is an array</value>
  </data>
    <data name="This output is an array" xml:space="preserve">
    <value>This output is an array</value>
  </data>
    <data name="This variable is an array" xml:space="preserve">
    <value>This variable is an array</value>
  </data>
    <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
    <data name="Timer" xml:space="preserve">
    <value>Timer</value>
  </data>
    <data name="Top Probability determines" xml:space="preserve">
    <value>Top Probability determines the cumulative probability threshold for token selection during text generation. Lower values will result in less diversity, making the model pick from the most probable tokens only. Higher values will allow for more diverse outputs, as the model will consider a wider range of tokens.</value>
  </data>
    <data name="TopP" xml:space="preserve">
    <value>TopP</value>
  </data>
    <data name="Trigger workflow" xml:space="preserve">
    <value>Trigger workflow</value>
  </data>
    <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
    <data name="UI Hint" xml:space="preserve">
    <value>UI Hint</value>
  </data>
    <data name="Unable to make changes as the workflow or application is currently in read-only mode" xml:space="preserve">
    <value>Unable to make changes as the workflow or application is currently in read-only mode</value>
  </data>
    <data name="Unpublish" xml:space="preserve">
    <value>Unpublish</value>
  </data>
    <data name="Unpublish the current workflow" xml:space="preserve">
    <value>Unpublish the current workflow.</value>
  </data>
    <data name="Updated" xml:space="preserve">
    <value>Updated</value>
  </data>
    <data name="UpdatedAt" xml:space="preserve">
    <value>UpdatedAt</value>
  </data>
    <data name="Usable as activity" xml:space="preserve">
    <value>Usable as activity</value>
  </data>
    <data name="Use JSON Response" xml:space="preserve">
    <value>Use JSON Response</value>
  </data>
    <data name="Use this version" xml:space="preserve">
    <value>Use this version</value>
  </data>
    <data name="Used" xml:space="preserve">
    <value>Used</value>
  </data>
    <data name="Used to define the initial instructions" xml:space="preserve">
    <value>Used to define the initial instructions or context that the Semantic Kernel agent will use to generate responses. This template guides the agent's behavior and helps it understand the role it needs to play or the tasks it needs to perform.</value>
  </data>
    <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
    <data name="Variables" xml:space="preserve">
    <value>Variables</value>
  </data>
    <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
    <data name="Version history" xml:space="preserve">
    <value>Version history</value>
  </data>
    <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
    <data name="Webhooks" xml:space="preserve">
    <value>Webhooks</value>
  </data>
    <data name="When checked, the workflow will be executed asynchronously." xml:space="preserve">
    <value>When checked, the workflow will be executed asynchronously.</value>
  </data>
    <data name="When you publish" xml:space="preserve">
    <value>When you publish a new version, all of the consuming workflows will be updated to point to the new version of this workflow.</value>
  </data>
    <data name="Whether to show the description in the designer." xml:space="preserve">
    <value>Whether to show the description in the designer.</value>
  </data>
    <data name="Workflow Context" xml:space="preserve">
    <value>Workflow Context</value>
  </data>
    <data name="Workflow Context Settings" xml:space="preserve">
    <value>Workflow Context Settings</value>
  </data>
    <data name="Workflow Contexts" xml:space="preserve">
    <value>Workflow Contexts</value>
  </data>
    <data name="Workflow definitions Editor" xml:space="preserve">
    <value>Workflow definitions Editor</value>
  </data>
    <data name="Workflow instances" xml:space="preserve">
    <value>Workflow instances</value>
  </data>
    <data name="The name of the workflow." xml:space="preserve">
    <value>The name of the workflow.</value>
  </data>
    <data name="Workflows" xml:space="preserve">
    <value>Workflows</value>
  </data>
    <data name="Write Line" xml:space="preserve">
    <value>Write Line</value>
  </data>
    <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
    <data name="You are running in read-only mode. Workflow operations are disabled" xml:space="preserve">
    <value>You are running in read-only mode. Workflow operations are disabled</value>
  </data>
    <data name="You can find documentation and examples here" xml:space="preserve">
    <value>You can find documentation and examples here</value>
  </data>
    <data name="Incident handling strategy" xml:space="preserve">
    <value>Incident handling strategy</value>
  </data>
</root>